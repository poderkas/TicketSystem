@page "/"

@using TicketSystem.Frontend.Clients
@using TicketSystem.Frontend.Models

@inject TicketsClient Client
@attribute [StreamRendering]

<PageTitle>Support Tickets</PageTitle>

<div class="mt-2">
    <a class="btn btn-primary" role="button" href="/editticket">New Ticket</a>
</div>

@if(tickets is null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped table-bordered table-hover mt-3">
        <thead class="table-dark">
            <th>Id</th>
            <th>Description</th>
            <th>Submission time</th>
            <th>Completion deadline</th>
            <th></th>
        </thead>
        <tbody>
            @foreach (var ticket in tickets){
                <tr>
                    <td>@ticket.Id</td>
                    <td>@ticket.Description</td>
                    <td>@ticket.SubmissionTime</td>
                    <td>@ticket.CompletionDeadline</td>
                    <td>
                        <div class="d-flex">
                            <a class="btn btn-primary me-2" role="button" href="@TicketUrl(ticket.Id)">
                                <i class="bi bi-pencil"></i>
                            </a>
                            <button class="btn btn-danger" 
                                    data-bs-toggle="modal" 
                                    data-bs-target="@GetDeleteModalId(ticket)">
                                <i class="bi bi-x-lg"></i>
                            </button>
                        </div>
                        <DeleteTicket Ticket="@ticket" />
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private Ticket[]? tickets;

    protected override async Task OnInitializedAsync()
    {
        tickets = await Client.GetTicketsAsync();
    }
    private static string TicketUrl(int id) => $"/editticket/{id}";

    private string GetDeleteModalId(Ticket ticket)
    {
        return $"#{DeleteTicket.GetModalId(ticket)}";
    }
}